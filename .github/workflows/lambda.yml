name: Lambda Build & Deploy to Dev

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  AWS_DEFAULT_REGION2: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_DEFAULT_REGION3: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      AWS_ARN: ${{ secrets.AWS_ROLE_ARN }} 
      LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if secret is set
        run: |
          if [ -z "${{ env.AWS_DEFAULT_REGION }}" ]; then
            echo "Secret AWS_DEFAULT_REGION is NOT set"
          else
            echo "Secret AWS_DEFAULT_REGION is set"
          fi
          if [ -z "${{ env.AWS_DEFAULT_REGION3 }}" ]; then
            echo "Secret AWS_DEFAULT_REGION3 is NOT set"
          else
            echo "Secret AWS_DEFAULT_REGION3 is set"
          fi
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ARN }}  # Use the ARN stored in the secret
          aws-region: ${{ env.AWS_DEFAULT_REGION }}  # Use the region from the environment

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ env.AWS_DEFAULT_REGION }}  # Use the region from the environment

      - name: Build AWS Lambda Image
        env:
          LAMBDA_FUNCTION_NAME: ${{ env.LAMBDA_FUNCTION_NAME }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          echo "Building and Packaging for Build: $GITHUB_RUN_NUMBER"
          docker build -t $LAMBDA_FUNCTION_NAME:$GITHUB_RUN_NUMBER -t $LAMBDA_FUNCTION_NAME .

      - name: Push to Amazon ECR
        env:
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          LAMBDA_FUNCTION_NAME: ${{ env.LAMBDA_FUNCTION_NAME }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          docker tag $LAMBDA_FUNCTION_NAME:$GITHUB_RUN_NUMBER 558375078907.dkr.ecr.us-east-2.amazonaws.com/trcyc:$GITHUB_RUN_NUMBER
          docker push 558375078907.dkr.ecr.us-east-2.amazonaws.com/trcyc:$GITHUB_RUN_NUMBER
          
  deploy_dev:
    runs-on: ubuntu-latest
    environment: dev  # Specify the environment here
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # Use the ARN stored in the environment
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}  # Use the region from the environment

      - name: Deploy to DEV AWS Lambda
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          LAMBDA_FUNCTION_NAME: ${{ secrets.LAMBDA_FUNCTION_NAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          sudo yum update -y && sudo yum install -y jq
          echo "Preparing Lambda environment variables for dev"
          CONFIG_FILE="config.dev.properties"
          JSON_OUTPUT_FILE="${CONFIG_FILE%.properties}.json"
          chmod +x generate_env_json.sh
          ./generate_env_json.sh "$CONFIG_FILE" "LAMBDA_FUNCTION_NAME=$LAMBDA_FUNCTION_NAME" "PASSWORD=$PASSWORD"
          aws lambda update-function-configuration --function-name $LAMBDA_FUNCTION_NAME --cli-input-json file://$JSON_OUTPUT_FILE
          aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --image-uri 558375078907.dkr.ecr.us-east-2.amazonaws.com/trcyc:latest --publish
